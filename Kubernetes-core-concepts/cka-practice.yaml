apiVersion: v1
kind: Namespace
metadata:
  name: cka-practice

---
apiVersion: v1
kind: Pod
metadata:
  name: correct-pod
  namespace: cka-practice
  labels:
    app: web
    env: test
spec:
  containers:
    - name: nginx
      image: nginx:latest
      ports:
        - containerPort: 80

---
apiVersion: v1
kind: Pod
metadata:
  name: failing-pod
  namespace: cka-practice
  labels:
    app: broken
spec:
  containers:
    - name: invalid-container
      image: nonexistentimage:latest  # Intentional failure
      ports:
        - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: cka-practice
  labels:
    app: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: cka-practice
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: cka-practice
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: correct-pvc
  namespace: cka-practice
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: failing-pvc
  namespace: cka-practice
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Ti  # Intentional failure

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: cka-practice
  name: pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-reader-binding
  namespace: cka-practice
subjects:
  - kind: User
    name: cka-user
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
